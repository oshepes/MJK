<% include ../partials/header %>

<!-- content area -->
	<div class="row">
               <div id="list" class="col-lg-10">
                <h4 class="page-header">ADVCP Overview</h4>
		<p>The ADVCP Bot will crawl advertiser's destination URLs and report back about any violations it had discovered along with screenshots of the offending page.</p>
		<p><strong>Supported detection:</strong></p>
		<ul>
			<li>JS POPUPS (Alerts)</li>
			<li>Overlays</li>
			<li>404 Errors</li>
			<li>500 Errors</li>
                        <li>X-Frame-Options</li>
			<li>Facebook Instant Articles</li>
                        <li>reCAPTCHA</li>
		</ul>
                <p class="page-header"><strong>Instructions:</strong></p>
                <ul>
                    <li>To run the BOT: go to <span class="bg-info"><code>Run ADVCP Bot</code></span> select bot options from dropdowns and click on &quot;Run Bot&quot; - an email with the results will be sent to the recipient.</li>
                    <li>You can choose to upload a (.csv) feed via the UI or choose `database` as the source for the Bot. (under Data Source)</li>
                    <li> All Bot jobs are under the <span class="bg-info"><code>Jobs</code></span> tab</li>
                    <li> Job reports are under the <span class="bg-info"><code>Reports</code></span> tab</li>
                </ul>
               
                <p class="page-header"><a id="techBtn" class="btn btn-default">Technical</a></p>
                <div id="tech_info" style="display:none" class="col-lg-10">
                <p>Application:</p>
                <ul>
                    <code>assembly/</code> - maven config<br/>
                    <code>conf/</code> - profile config<br/>
                    <code>css/</code> - css files<br/>
                    <code>js/</code> - js files<br/>
                    <code>routes/</code> - app routes<br/>
                    <code>models/</code> - models<br/>
                    <code>node_modules/</code> - node modules<br/>
                    <code>includes/</code> - bot config and client scripts<br/>
                    <code>screenshots/</code> - captured screenshots<br/>
                    <code>data/</code> - feeds and data files<br/>
                    <code>crawler.js</code> - main bot module<br/>
                    <code>sync_to_cdn.js</code> - CDN file synchronizer<br/>
                    <code>mailer.js</code> - Mailer<br/>
                    <code>main.sh</code> - Shell wrapper (crontab ready)<br/>
                    <code>server.js</code> - NodeJs server (API)<br/>
                    <code>request.js</code> - Feed writer (from API)<br/>
                </ul>
                <p>Config files:</p>
                <ul>
                    <code>includes/config.js</code> - Application <br/>
                    <code>includes/useragents.js</code> - User-Agents <br/>
                    <code>includes/rackspace.js</code> - Rackspace CDN <br/>
                    <code>includes/mysql.js</code> - Database <br/>
                    <code>includes/detect.js</code> - Violation detection <br/>
                    <code>includes/mail_cfg.js</code> - Mail <br/>
                </ul>
                <p>Examples:</p>
                <ul>
                    Crontab: <br/><code>0 * * * * /bin/bash /path/to/main.sh -m , -o 0 -t 1000 -s file -f feed.csv -u Chrome43/Win8 -r admin@advertise.com -l 4-4-16 -v CODE_JSPOP</code> <br/>
                    CasperJs: <br/><code>casperjs --ignore-ssl-errors=true --log_delim=, --src=file --feed=feed.csv --logfile=4-8-2016 --detect=CODE_JSPOP,CODE_XFRAME --ua=Android/Mobile crawler.js</code> <br/>
                    CDN: <br/><code>node sync_to_cdn.js FILE</code> <br/>
                    Mailer: <br/><code>node mailer.js RCPT FILE [UA] </code> <br/>
                </ul><br/>
                </div>
                <br/><br/>
	      </div>
	</div>
<% include ../partials/footer %>
